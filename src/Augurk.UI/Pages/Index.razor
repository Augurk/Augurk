<!--
 * Copyright (c) Augurk. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0.
-->

@page "/"
@inject SearchService SearchService
@inject ProductService ProductService
@using Augurk.Entities.Search
@using Augurk.UI.Components

<div class="container-fluid">
    <div class="row">
        <Searchbox />
        @if (_searching)
        {
            <div class="col-md-6 offset-md-3" style="margin-top: 5px;">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped bg-success progress-bar-animated" role="progressbar" style="width: 100%"></div>
                </div>
            </div>
        }
    </div>
    <div class="row">
        @foreach(var feature in _latestResults?.FeatureMatches ?? Enumerable.Empty<FeatureMatch>())
        {
            <FeatureResult Feature="feature" />
        }
    </div>
    <div class="row justify-content-md-center">
        @foreach(var product in _products ?? Enumerable.Empty<Product>()) {
            <ProductCard Product="product" />
        }
    </div>
</div>

@code {
    private SearchResults _latestResults;
    private bool _searching;
    private IEnumerable<Product> _products;

    protected override void OnInitialized()
    {
        SearchService.OnSearchResultsChanged += OnSearchResultsChanged;
        SearchService.OnSearchStateChanged += OnSearchStateChanged;
    }

    protected override async Task OnParametersSetAsync()
    {
        _products = await ProductService.GetProductsAsync();
    }

    private async Task OnSearchResultsChanged(SearchResults newResults)
    {
        await InvokeAsync(() =>
        {
            _latestResults = newResults;
            StateHasChanged();
        });
    }

    private async Task OnSearchStateChanged(bool searching)
    {
        await InvokeAsync(() =>
        {
            _searching = searching;
            StateHasChanged();
        });
    }
}
