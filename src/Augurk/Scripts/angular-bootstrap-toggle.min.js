!function () { "use strict"; angular.module("ui.toggle", []).value("$toggleSuppressError", !1).constant("toggleConfig", { on: "On", off: "Off", size: "", onstyle: "btn-primary", offstyle: "btn-default", style: "" }).controller("ToggleController", ["$scope", "$attrs", "$interpolate", "$log", "toggleConfig", "$toggleSuppressError", function (e, t, n, l, s) { var o = this, a = { $setViewValue: angular.noop }; angular.forEach(["on", "off", "size", "onstyle", "offstyle", "style"], function (l, a) { o[l] = angular.isDefined(t[l]) ? 6 > a ? n(t[l])(e.$parent) : e.$parent.$eval(t[l]) : s[l] }), this.init = function (n) { a = n, a.$render = function () { o.render() }, a.$viewChangeListeners.push(function () { e.$eval(t.ngChange) }); var l = o.element.find("label"); angular.element(l[0]).html(o.on), angular.element(l[1]).html(o.off); var s = o.element.find("span"), i = o.width || Math.max(l[0].offsetWidth, l[1].offsetWidth) + s[0].offsetWidth / 2, r = o.height || Math.max(l[0].offsetHeight, l[1].offsetHeight), f = o.element.find("div"), g = f[0].offsetWidth, c = f[1].offsetHeight; e.wrapperStyle = {}, i > g && (e.wrapperStyle.width = i + "px"), r > c && "btn-xs" != o.size && "btn-sm" != o.size && (e.wrapperStyle.height = r + "px"), e.onClass = [o.onstyle, o.size, "toggle-on"], e.offClass = [o.offstyle, o.size, "toggle-off"], e.handleClass = [o.size, "toggle-handle"] }, this.render = function () { this.isOn = angular.isDefined(a.$viewValue) ? a.$viewValue : !1, e.wrapperClass = this.isOn ? [o.onstyle, o.size, o.style] : [o.offstyle, "off ", o.size, o.style] }, e.onSwitch = function () { a.$setViewValue(!a.$viewValue), a.$render() }, angular.forEach(["ngModel"], function (n) { var l = e.$parent.$watch(t[n], function () { a.$render() }); e.$parent.$on("$destroy", function () { l() }) }) }]).directive("toggle", function () { return { restrict: "E", transclude: !0, template: '<div class="toggle btn" ng-class="wrapperClass" ng-style="::wrapperStyle" ng-click="onSwitch()"><div class="toggle-group"><label class="btn" ng-class="::onClass"></label><label class="btn active" ng-class="::offClass"></label><span class="btn btn-default" ng-class="::handleClass"></span></div></div>', scope: { bindModel: "=ngModel" }, require: ["toggle", "ngModel"], controller: "ToggleController", controllerAs: "toggle", link: function (e, t, n, l) { var s = l[0], o = l[1]; s.element = t, s.init(o) } } }) }();